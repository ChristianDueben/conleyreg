// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// isbalancedcpp
int isbalancedcpp(arma::mat M);
RcppExport SEXP _conleyreg_isbalancedcpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(isbalancedcpp(M));
    return rcpp_result_gen;
END_RCPP
}
// haversine_mat
arma::mat haversine_mat(arma::mat coords, unsigned long int n_obs);
RcppExport SEXP _conleyreg_haversine_mat(SEXP coordsSEXP, SEXP n_obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< unsigned long int >::type n_obs(n_obsSEXP);
    rcpp_result_gen = Rcpp::wrap(haversine_mat(coords, n_obs));
    return rcpp_result_gen;
END_RCPP
}
// XeeXhC
arma::mat XeeXhC(arma::mat distances, arma::mat X, arma::vec e, unsigned long int n_obs_t, unsigned int n_vars);
RcppExport SEXP _conleyreg_XeeXhC(SEXP distancesSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n_obs_tSEXP, SEXP n_varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e(eSEXP);
    Rcpp::traits::input_parameter< unsigned long int >::type n_obs_t(n_obs_tSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n_vars(n_varsSEXP);
    rcpp_result_gen = Rcpp::wrap(XeeXhC(distances, X, e, n_obs_t, n_vars));
    return rcpp_result_gen;
END_RCPP
}
// lp_filling
arma::mat lp_filling(arma::mat distances, arma::mat X, arma::vec e, unsigned long int n_obs_t, unsigned int n_vars);
RcppExport SEXP _conleyreg_lp_filling(SEXP distancesSEXP, SEXP XSEXP, SEXP eSEXP, SEXP n_obs_tSEXP, SEXP n_varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e(eSEXP);
    Rcpp::traits::input_parameter< unsigned long int >::type n_obs_t(n_obs_tSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n_vars(n_varsSEXP);
    rcpp_result_gen = Rcpp::wrap(lp_filling(distances, X, e, n_obs_t, n_vars));
    return rcpp_result_gen;
END_RCPP
}
// time_dist
arma::mat time_dist(arma::vec times, double lag_cutoff, arma::mat X, arma::vec res, unsigned int n_obs_u, int n_vars);
RcppExport SEXP _conleyreg_time_dist(SEXP timesSEXP, SEXP lag_cutoffSEXP, SEXP XSEXP, SEXP resSEXP, SEXP n_obs_uSEXP, SEXP n_varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    Rcpp::traits::input_parameter< double >::type lag_cutoff(lag_cutoffSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type res(resSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n_obs_u(n_obs_uSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    rcpp_result_gen = Rcpp::wrap(time_dist(times, lag_cutoff, X, res, n_obs_u, n_vars));
    return rcpp_result_gen;
END_RCPP
}
// lp_vcov
arma::mat lp_vcov(arma::mat V, arma::mat filling, unsigned int n_vars);
RcppExport SEXP _conleyreg_lp_vcov(SEXP VSEXP, SEXP fillingSEXP, SEXP n_varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type filling(fillingSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n_vars(n_varsSEXP);
    rcpp_result_gen = Rcpp::wrap(lp_vcov(V, filling, n_vars));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_conleyreg_isbalancedcpp", (DL_FUNC) &_conleyreg_isbalancedcpp, 1},
    {"_conleyreg_haversine_mat", (DL_FUNC) &_conleyreg_haversine_mat, 2},
    {"_conleyreg_XeeXhC", (DL_FUNC) &_conleyreg_XeeXhC, 5},
    {"_conleyreg_lp_filling", (DL_FUNC) &_conleyreg_lp_filling, 5},
    {"_conleyreg_time_dist", (DL_FUNC) &_conleyreg_time_dist, 6},
    {"_conleyreg_lp_vcov", (DL_FUNC) &_conleyreg_lp_vcov, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_conleyreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
